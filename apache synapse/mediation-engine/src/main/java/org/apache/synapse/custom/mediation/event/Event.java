package org.apache.synapse.custom.mediation.event;

import java.util.HashMap;
import java.util.Map;

/**
 * Represents an event in Apache Synapse.
 * Events are generated by event sources and handled by event listeners.
 */
public class Event {
    
    private final String type;
    private final EventSource source;
    private final long timestamp;
    private final Map<String, Object> properties;
    
    /**
     * Create a new event
     * 
     * @param type The event type
     * @param source The event source
     */
    public Event(String type, EventSource source) {
        this.type = type;
        this.source = source;
        this.timestamp = System.currentTimeMillis();
        this.properties = new HashMap<>();
    }
    
    /**
     * Get the event type
     * 
     * @return The event type
     */
    public String getType() {
        return type;
    }
    
    /**
     * Get the event source
     * 
     * @return The event source
     */
    public EventSource getSource() {
        return source;
    }
    
    /**
     * Get the event timestamp
     * 
     * @return The event timestamp
     */
    public long getTimestamp() {
        return timestamp;
    }
    
    /**
     * Set a property
     * 
     * @param name The property name
     * @param value The property value
     */
    public void setProperty(String name, Object value) {
        properties.put(name, value);
    }
    
    /**
     * Get a property
     * 
     * @param name The property name
     * @return The property value
     */
    public Object getProperty(String name) {
        return properties.get(name);
    }
    
    /**
     * Get all properties
     * 
     * @return Map of properties
     */
    public Map<String, Object> getProperties() {
        return properties;
    }
} 